name: Build GStreamer Android

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build GStreamer Android (${{ matrix.abi }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        abi: [arm64-v8a]  # Add more ABIs if needed: armeabi-v7a, x86, x86_64

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Install Nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true
            allow-unfree = true

      - name: 🗄️ Setup Cachix (Optional)
        uses: cachix/cachix-action@v14
        with:
          name: gstreamer-android  # Replace with your cachix cache name
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: ${{ github.event_name == 'pull_request' }}
        continue-on-error: true  # Continue if cachix is not configured

      - name: 🔍 Check Nix flake
        run: |
          nix flake show
          nix flake metadata

      - name: ✅ Run flake checks
        run: nix flake check --show-trace

      - name: 🔨 Build GStreamer Android
        run: |
          echo "Building GStreamer Android for ${{ matrix.abi }}..."
          nix build .#gstreamer-android --print-build-logs

          # Show build results
          echo "::group::Build artifacts"
          ls -lh result/artifacts/
          file result/artifacts/*.so
          echo "::endgroup::"

      - name: 📊 Verify build
        run: |
          echo "::group::File checksums"
          cat result/artifacts/checksums.txt || sha256sum result/artifacts/*.so
          echo "::endgroup::"

          echo "::group::Architecture verification"
          for so in result/artifacts/*.so; do
            if file "$so" | grep -q "ARM aarch64"; then
              echo "✓ $(basename "$so") - ARM aarch64 ✓"
            else
              echo "✗ $(basename "$so") - Wrong architecture!"
              exit 1
            fi
          done
          echo "::endgroup::"

      - name: 📦 Package artifacts
        run: |
          mkdir -p artifacts/${{ matrix.abi }}
          cp -v result/artifacts/*.so artifacts/${{ matrix.abi }}/
          cp -v result/artifacts/README.md artifacts/ || true
          cp -v result/artifacts/checksums.txt artifacts/${{ matrix.abi }}/ || true

          # Create archive
          tar -czf gstreamer-android-${{ matrix.abi }}.tar.gz -C artifacts .

          # Create artifact info
          cat > artifacts/build-info.txt << EOF
          GStreamer Android Build
          =======================
          Version: $(nix eval .#gstreamerAndroid.config.gstreamerVersion --raw)
          ABI: ${{ matrix.abi }}
          NDK: r25c
          Platform: android-21
          Commit: ${{ github.sha }}
          Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          Workflow: ${{ github.workflow }}
          Run: ${{ github.run_number }}
          EOF

          cat artifacts/build-info.txt

      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gstreamer-android-${{ matrix.abi }}
          path: |
            artifacts/${{ matrix.abi }}/*.so
            artifacts/*.md
            artifacts/*.txt
          retention-days: 30

      - name: 📤 Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: gstreamer-android-${{ matrix.abi }}-archive
          path: gstreamer-android-${{ matrix.abi }}.tar.gz
          retention-days: 90

  # Run development shell to verify environment
  test-devshell:
    name: Test Development Shell
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Install Nix
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true
            allow-unfree = true

      - name: 🧪 Test development shell
        run: |
          nix develop --command bash -c '
            echo "Testing development shell..."
            echo "GStreamer version: $GSTREAMER_ANDROID_VERSION"
            echo "NDK version: $GSTREAMER_ANDROID_NDK"
            echo "Target ABI: $GSTREAMER_ANDROID_ABI"

            # Test commands exist
            command -v gst-android-info
            gst-android-info
          '

  # Create release on tag
  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: 📦 Prepare release assets
        run: |
          mkdir -p release

          # Copy archives
          find release-artifacts -name "*.tar.gz" -exec cp {} release/ \;

          # Create combined archive
          cd release-artifacts
          tar -czf ../release/gstreamer-android-all-abis.tar.gz */
          cd ..

          # List release files
          ls -lh release/

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*.tar.gz
          body: |
            ## GStreamer Android Build

            Pre-built GStreamer Android libraries for integration with Android apps.

            ### What's Included
            - `libgstreamer_android.so` - GStreamer JNI wrapper
            - `libc++_shared.so` - C++ standard library

            ### Supported ABIs
            - arm64-v8a (Android 64-bit ARM)

            ### Installation
            1. Download the archive for your target ABI
            2. Extract to `app/src/main/jniLibs/<ABI>/`
            3. Follow the README.md for integration steps

            ### Build Info
            - **GStreamer Version**: 1.26.6
            - **NDK Version**: r25c (25.2.9519653)
            - **Min Android Version**: API 21 (Android 5.0)
            - **Built with**: Nix Flakes

            ### Checksums
            See individual `checksums.txt` files in each archive.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}